;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Fri May 29 2020
; Processor: AT89C51
; Compiler:  ASEM-51 (Proteus)
;====================================================================

$NOMOD51
$INCLUDE (8051.MCU)

;====================================================================
; DEFINITIONS
;====================================================================

;====================================================================
; VARIABLES
;====================================================================




;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      org   0000h
;====================================================================
; CODE SEGMENT
;====================================================================
	MOV	P2,#11111110B
	MOV	P1,#00000000B
	MOV P3, #0FEH		;INÍCIO DO LDC COM L1 EM GROUND (LINHA 



MAINLOOP:
	ACALL	SCAN
	ACALL	DISPLAY
	LJMP	MAINLOOP
	
	
	
SCAN:
L1:
	JNB 	P3.0, C1
	JNB 	P3.1, C2
	JNB 	P3.2, C3
	JNB 	P3.3, C4
	SJMP 	EXIT
C1:
	JNB 	P3.4, NO_1
	JNB 	P3.5, NO_4
	JNB 	P3.6, NO_7
	JNB 	P3.7, JUMP_F
	SETB 	P3.0
	CLR 	P3.1
	SJMP 	EXIT
C2:
	JNB 	P3.4, NO_2	;2
	JNB 	P3.5, NO_5
	JNB 	P3.6, NO_8
	JNB 	P3.7, NO_0
	SETB 	P3.1
	CLR 	P3.2
	SJMP 	EXIT
C3:
	JNB 	P3.4, NO_3	;3
	JNB 	P3.5, NO_6
	JNB 	P3.6, NO_9
	JNB 	P3.7, JUMP_E
	SETB 	P3.2
	CLR 	P3.3
	SJMP 	EXIT
C4:
	JNB 	P3.4, NO_A	;A
	JNB 	P3.5, NO_B
	JNB 	P3.6, NO_C
	JNB 	P3.7, JUMP_D
	SETB 	P3.3
	CLR 	P3.0
	LJMP 	EXIT
EXIT:
	RET


JUMP_A: LJMP NO_A
JUMP_B: LJMP NO_B
JUMP_C: LJMP NO_C
JUMP_D: LJMP NO_D
JUMP_E: LJMP NO_E
JUMP_F: LJMP NO_F


NO_0: 
	MOV 	R0, #0D
	LJMP 	L1
NO_1: 
	MOV 	R0, #1D
	LJMP 	L1
NO_2: 
	MOV 	R0, #2D
	LJMP 	L1
NO_3: 
	MOV 	R0, #3D
	LJMP 	L1
NO_4: 
	MOV 	R0, #4D
	LJMP 	L1
NO_5: 
	MOV 	R0, #5D
	LJMP 	L1
NO_6: 
	MOV 	R0, #6D
	LJMP 	L1
NO_7: 
	MOV 	R0, #7D
	LJMP 	L1
NO_8: 
	MOV 	R0, #8D
	LJMP 	L1
NO_9: 
	MOV 	R0, #9D
	LJMP 	L1
NO_A:
	MOV R0, #10
	LJMP L1
NO_B:
	MOV R0, #11
	LJMP L1
NO_C:
	MOV R0, #12
	LJMP L1
NO_D:
	MOV R0, #13
	LJMP L1
NO_E:
	MOV R0, #14
	LJMP L1
NO_F:
	MOV R0, #15
	LJMP L1


DISPLAY:
	MOV	A,R0
	mov 	dptr,#SSD_CC
	movc 	A,@a+dptr
	mov 	P1,A
;	LCALL	DELAY1
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DELAY1:	MOV	R1, #255	;APPROX 50 mS		;50 or higher for fast CPUs
HERE2:	MOV	R2, #255		;R4=255
HERE:	DJNZ	R2, HERE		;stay untill R4 becomes 0
	DJNZ 	R1, HERE2
	RET

org  300h
;00111001B
SSD_CC:	DB 3FH,06H,05BH,04FH,066H,06DH, 07DH,07H,07FH,06FH, 077H,07CH,039H,05EH,079H,071H

;====================================================================
      END
